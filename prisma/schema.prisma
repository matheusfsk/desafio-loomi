generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserType {
  admin
  customer
}

enum OrderStatus {
  received
  in_preparation
  dispatched
  delivered
}

model User {
  id              Int      @id @unique @default(autoincrement())
  name            String
  email           String   @unique
  password        String
  created_at      DateTime @default(now())
  updated_at      DateTime @default(now())
  user_type       UserType
  email_confirmed Boolean  @default(false)
  Order           Order[]

  @@map("users")
}

model Customer {
  id         Int      @id @unique @default(autoincrement())
  email      String   @unique
  full_name  String?
  contact    String?
  address    String?
  status     Boolean
  created_at DateTime @default(now())
  updated_at DateTime @default(now())

  @@map("customers")
}

model Product {
  id          Int         @id @unique @default(autoincrement())
  name        String
  category_id Int
  category    Category    @relation(fields: [category_id], references: [id])
  description String      @db.VarChar(255)
  price       Decimal
  amount      Int
  image       String?
  created_at  DateTime    @default(now())
  updated_at  DateTime    @default(now())
  OrderItem   OrderItem[]

  @@map("products")
}

model Order {
  id           Int         @id @unique @default(autoincrement())
  user_id      Int
  user         User        @relation(fields: [user_id], references: [id])
  order_status OrderStatus @default(received)
  created_at   DateTime    @default(now())
  updated_at   DateTime    @default(now())
  total        Decimal
  OrderItem    OrderItem[]

  @@map("orders")
}

model OrderItem {
  id         Int     @id @unique @default(autoincrement())
  order_id   Int
  order      Order   @relation(fields: [order_id], references: [id], onDelete: Cascade) // Adicionando onDelete: Cascade
  product_id Int
  product    Product @relation(fields: [product_id], references: [id])
  amount     Int
  price      Decimal
  subtotal   Decimal

  @@map("order_items")
}

model SalesReport {
  id            Int      @id @unique @default(autoincrement())
  period        DateTime
  sales_amount  Decimal
  products_sold Int
  csv_file      String

  @@map("sales_reports")
}

model Category {
  id       Int       @id @unique @default(autoincrement())
  category String
  Product  Product[]

  @@map("categories")
}
